<?php
/**
 * @var Config $block
 */
use Ibo\MultiSlider\Block\Adminhtml\System\Config;
// @codingStandardsIgnoreFile
?>
<?php
$_htmlId = $block->getHtmlId() ? $block->getHtmlId() : '_' . uniqid();
?>
<div class="design_theme_ua_regexp" id="grid<?=$block->escapeHtml($_htmlId) ?>">
    <div class="admin__control-table-wrapper">
        <table class="admin__control-table" id="<?=$block->escapeHtml($block->getElement()->getId()) ?>">
            <thead>
                <tr>
                    <?php foreach ($block->getColumns() as $columnName => $column): ?>
                        <th><?=$block->escapeHtml($column['label'])?></th>
                    <?php endforeach; ?>
                </tr>
            </thead>
            <tbody id="addRow<?=$block->escapeHtml($_htmlId)?>"></tbody>
        </table>
    </div>
    <input type="hidden" name="<?=$block->escapeHtml($block->getElement()->getName())?>[__empty]" value="" />
    <script>
        require([
                'mage/template',
                'prototype'
        ], function (mageTemplate) {
        // create row creator
        window.arrayRow<?=$block->escapeHtml($_htmlId)?> = {

        // define row prototypeJS template
        template: mageTemplate(
                '<tr id="<%- _id %>">'
<?php foreach ($block->getColumns() as $columnName => $column): ?>
            + '<td>'
                    + '<?=/* @escapeNotVerified */$block->renderCellTemplate($columnName)?>'
                    + '<\/td>'
<?php endforeach; ?>
        + '<\/tr>'
                ),
                add: function(rowData, insertAfterId){
                // generater default template data
                var templateValues;
                // Prepare template values
                if (rowData) {
                templateValues = rowData;
                } else {
                var d = new Date();
                templateValues = {
<?php foreach ($block->getColumns() as $columnName => $column): ?>
    <?=$block->escapeHtml($columnName)?>: '',
                            'option_extra_attrs': {},
<?php endforeach; ?>
                _id: '_' + d.getTime() + '_' + d.getMilliseconds()
                };
                }

                // Insert new row after specified row or at the bottom
                if (insertAfterId) {
                Element.insert($(insertAfterId), {after: this.template(templateValues)});
                } else {
                Element.insert($('addRow<?=$block->escapeHtml($_htmlId)?>'), {bottom: this.template(templateValues)});
                }

                // Fill controls with data
                if (rowData) {
                   var rowInputElementNames = Object.keys(rowData.column_values);
                    for (var i = 0; i < rowInputElementNames.length; i++) {
                         if ($(rowInputElementNames[i])) {
                            $(rowInputElementNames[i]).setValue(rowData.column_values[rowInputElementNames[i]]);
                        }
                     }
                   }
                },
        }

        // bind add action to "Add" button in last row
<?php if (!$this->getArrayRows()): ?>
            document.observe('dom:loaded', arrayRow<?=$block->escapeHtml($_htmlId)?>.
            add.bind(arrayRow<?= /* @escapeNotVerified */ $_htmlId ?>, false, false));
<?php endif; ?>

        // add existing rows
<?php
foreach ($block->getArrayRows() as $_rowId => $_row) {?>
    <?="arrayRow{$_htmlId}.add(" . $_row->toJson() . ");\n";?>
<?php }
?>
        });
    </script>
</div>
